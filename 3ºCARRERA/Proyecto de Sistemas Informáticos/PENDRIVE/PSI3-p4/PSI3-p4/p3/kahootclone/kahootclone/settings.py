"""
Django settings for kahootclone project.

Generated by 'django-admin startproject' using Django 3.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import dj_database_url

import os 
from dotenv import load_dotenv

BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(BASE_DIR / '.env')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY') 

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
if 'DEBUG' in os.environ:
    DEBUG = os.getenv('DEBUG', '0').lower() in ['true', 't', '1']

ALLOWED_HOSTS = []

ALLOWED_HOSTS = ['localhost','127.0.0.1']
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')


if 'RENDER_EXTERNAL_HOSTNAME' in os.environ:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)



    
#SECURE_SSL_REDIRECT= not DEBUG
#SESSION_COOKIE_SECURE= not DEBUG
#CSRF_COOKIE_SECURE= not DEBUG
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'models.apps.ModelsConfig',
    'rest_framework',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'kahootclone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    
]


LOGIN_REDIRECT_URL = '/models/home'
LOGOUT_REDIRECT_URL = '/models/home'
AUTH_USER_MODEL = 'models.User'

WSGI_APPLICATION = 'kahootclone.wsgi.application'

DATABASES = {
}

POSTGRESQL_URL = 'postgres://alumnodb:alumnodb@localhost/psi'

db_from_env = dj_database_url.config(default=os.getenv('DATABASE_URL'), conn_max_age=500)

DATABASES['default'] = db_from_env

CORS_ORIGIN_ALLOW_ALL = DEBUG

CORS_ORIGIN_WHITELIST = [
    'http://127.0.0.1:3000',
    'http://localhost:3000'
]
    
    
    
CORS_WHITELIST=os.getenv('CORS_WHITELIST')

if (CORS_WHITELIST):
    CORS_ORIGIN_WHITELIST.append(CORS_WHITELIST)




if 'TESTING ' in os.environ :
    # do no t c heck v a r i a b l e DATABASE_URL
    # j u s t use l o c a l p o s t g r e s
    db_from_env = {
    'ENGINE' : 'django.db.backends.postgresql' ,
    'NAME' : 'psi' ,
    'USER ' : 'alumnodb' ,
    'PASSWORD' : 'alumnodb' ,
    'HOST' : 'localhost' ,
    'PORT' : '' ,
    }
else:
    # d j_ d a t ab a se_ u rl w i l l c heck f o r t h e
    # v a r i a b l e DATABASE_URL.
    # I t s h o ul d p o i n t t o NEON b u t d u r i n g
    # devel o pmen t i t may be i n t e r e s t n g
    # t o have a c c e s s t o a l o c a l p o s t g r e s d a t a b a s e
    # so i f DATABASE_URL i s no t d e f i n e d use POSTGRESQL_URL
    db_from_env = dj_database_url.config (
        default=POSTGRESQL_URL, conn_max_age=500)

DATABASES['default'] = db_from_env

# add ren de r h o s t t o a l l ow e d h o s t
ALLOWED_HOSTS = [ 'localhost',  '127.0.0.1']
RENDER_EXTERNAL_HOSTNAME = os.environ.get( 'RENDER_EXTERNAL_HOSTNAME' )

if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS. append (RENDER_EXTERNAL_HOSTNAME)

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = BASE_DIR / "sent_emails"
# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = True


PROJECT_DIR= BASE_DIR
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT =BASE_DIR / "static"
STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static_compiled'),
    
]


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STORAGES = {
    # ...
    "static": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

