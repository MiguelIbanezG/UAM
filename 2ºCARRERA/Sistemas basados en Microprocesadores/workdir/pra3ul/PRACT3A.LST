Turbo Assembler	 Version 2.0	    04/20/22 23:35:24	    Page 1
pract3a.ASM



      1	0000			     PRAC3A SEGMENT BYTE PUBLIC	'CODE'
      2				     PUBLIC _imparPositivo
      3				     PUBLIC _calculaDigito
      4				     PUBLIC _siguientePrimo
      5	0000  0001		     MASCARA DW	1b	     ; Dato para la fase final
      6				     ASSUME CS:	PRAC3A
      7	0002			     _imparPositivo PROC FAR
      8	0002  55			 PUSH BP
      9	0003  8B EC			 MOV BP, SP
     10	0005  53 52 51			 PUSH BX DX CX;	salvar registros a usar
     11	0008  8B 46 06			 MOV AX, [BP + 6] ; recuperar datos
     12	000B  B9 0000			 MOV CX,0
     13					 ; testeamos si	el número es negativo
     14	000E  3D 0000			 CMP AX,0
     15	0011  79 06			 JNS  CONTINUE	 ; Si es positivo continuamos
     16	0013  B8 0000			 MOV AX,0
     17	0016  EB 06 90			 JMP FIN
     18	0019			     CONTINUE:
     19	0019  2E: 23 06	0000r		 AND AX,MASCARA
     20	001E			     FIN:
     21	001E  59 5A 5B 5D		 POP CX	DX BX BP ;recuperar registros usados
     22	0022  CB			 RET
     23	0023			     _imparPositivo ENDP
     24	0023			     _calculaDigito PROC FAR
     25	0023  55			 PUSH BP
     26	0024  8B EC			 MOV BP,SP
     27	0026  51 53 52 56		 PUSH CX BX DX SI
     28	002A  8B 46 06			 MOV AX, [BP+6]	   ; Sacar al numero
     29	002D  8B 4E 08			 MOV CX, [BP+8]	   ; Sacar la posición
     30	0030  BB 000A			 MOV BX, 0Ah	   ; Inicializamos a BX	= 10
     31	0033  BA 0000			 MOV DX,0	   ; Inicializamos a DX
     32
     33	0036			     OTRO:
     34	0036  F7 F3			 DIV BX
     35	0038  8B F2			 MOV SI,DX
     36	003A  BA 0000			 MOV DX,0    ; Reiniciamos a dx	pq sino	problemas
     37	003D  49			 DEC CX
     38	003E  83 F9 00			 CMP CX,0    ; CX - 0 -> FLAGS
     39	0041  7D F3			 JGE OTRO    ; CX >= 0
     40
     41	0043  8B C6			 MOV AX, SI ; El resultado que queremos
     42					 ; Final de la función
     43	0045  5E 5A 5B 59		 POP SI	DX BX CX
     44	0049  5D			 POP BP
     45	004A  CB			 RET
     46	004B			     _calculaDigito ENDP
     47	004B			     _siguientePrimo PROC FAR
     48	004B  55			 PUSH BP
     49	004C  8B EC			 MOV BP,SP
     50	004E  51 53 52 56		 PUSH CX BX DX SI
     51	0052  8B 4E 06			 MOV CX, [BP+6]	   ; Sacamos al	número	en cuestión
     52	0055  41			 INC CX		   ; Para buscar al num	siguiente
     53
     54	0056			     WHILE1:
     55	0056  BE 0001			 MOV SI,1	   ; Flag que indica que en principio el número a examinar es primo
     56	0059  BB 0002			 MOV BX,2
     57	005C			     WHILE2:
Turbo Assembler	 Version 2.0	    04/20/22 23:35:24	    Page 2
pract3a.ASM



     58	005C  BA 0000			 MOV DX,0	   ; Inicializamos a DX
     59	005F  8B C1			 MOV AX,CX	   ; Cargamos al número actual
     60	0061  F7 F3			 DIV BX		   ; Dividimos entre el	número
     61
     62	0063  83 FA 00			 CMP DX,0	   ; DX	- 0 (Básicamente si AX	multp de DX)
     63	0066  75 06			 JNZ SIGUE
     64	0068  BE 0000			 MOV SI,0
     65	006B  EB 0E 90			 JMP OUTWHILE
     66	006E			     SIGUE:
     67	006E  43			 INC BX
     68	006F  3B CB			 CMP CX,BX	   ; CX	- BX ->	FLAGS
     69	0071  74 18			 JE PRIMO	   ; Si	BX == CX -> Primo !
     70
     71	0073  81 FB 0100		 CMP BX,256	   ; sqrt(2^16)	= 256 Num máximo a comprobar
     72	0077  74 02			 JZ OUTWHILE		; Si BX	== 256 -> el número de	CX es primo
     73	0079  EB E1			 JMP WHILE2
     74
     75	007B			     OUTWHILE:
     76	007B  83 FE 00			 CMP SI,0
     77	007E  75 0B			 JNZ PRIMO	   ; Si	la flag	persistió -> Encontrado !
     78
     79	0080  83 F9 FF			 CMP CX,0FFFFH	   ; Si	 CX == FFFFh no	lo tenemos houston
     80	0083  74 03			 JE NOPRIMO	  ; F-ésima chavales
     81
     82	0085  41			 INC CX
     83	0086  EB CE			 JMP WHILE1
     84	0088			     NOPRIMO:
     85	0088  B9 0000			 MOV CX, 0
     86	008B			     PRIMO:
     87	008B  8B C1			 MOV AX, CX
     88
     89	008D  5E 5A 5B 59		 POP SI	DX BX CX
     90	0091  5D			 POP BP
     91	0092  CB			 RET
     92	0093			     _siguientePrimo ENDP
     93	0093			     PRAC3A ENDS ; FIN DEL SEGMENTO DE CODIGO
     94				     END
Turbo Assembler	 Version 2.0	    04/20/22 23:35:24	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??date				  Text	 "04/20/22"
??filename			  Text	 "pract3a "
??time				  Text	 "23:35:24"
??version			  Number 0200
@Cpu				  Text	 0101H
@FileName			  Text	 pract3a
@WordSize			  Text	 2
@curseg				  Text	 PRAC3A
CONTINUE			  Near	 PRAC3A:0019
FIN				  Near	 PRAC3A:001E
MASCARA				  Word	 PRAC3A:0000
NOPRIMO				  Near	 PRAC3A:0088
OTRO				  Near	 PRAC3A:0036
OUTWHILE			  Near	 PRAC3A:007B
PRIMO				  Near	 PRAC3A:008B
SIGUE				  Near	 PRAC3A:006E
WHILE1				  Near	 PRAC3A:0056
WHILE2				  Near	 PRAC3A:005C
_calculaDigito			  Far	 PRAC3A:0023
_imparPositivo			  Far	 PRAC3A:0002
_siguientePrimo			  Far	 PRAC3A:004B

Groups & Segments		  Bit Size Align  Combine Class

PRAC3A				  16  0093 Byte	  Public  CODE
